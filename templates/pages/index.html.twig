{% extends 'base.html.twig' %}

{% block title %}Accueil{% endblock %}

{% block body %}

    <div class="hero relative container-box w-full">
        <div class="hero__body">
            <div class="hero__hello reveal">üëãüèæ Hey, je suis</div>
            <div class="hero__name reveal" data-delay=".2">
                Lazare Fortune
            </div>
            <div class="hero__job reveal" data-delay=".3">
                D√©veloppeur Web PHP FullStack
            </div>
            <div class="hero__cta mt-10 reveal" data-delay=".4">
                <a href="{{ path('app_contact') }}" class="btn-lg btn-primary">
                    Me contacter
                </a>
                <a href="" class="btn-lg btn-outline-primary">
                    Mes contenus
                </a>
            </div>
        </div>
        <div class="hero__img reveal" data-delay=".4">
            <img class="rounded-full w-80" src="{{ asset('images/avatar-lazare-fortune.png') }}" alt="Lazare Fortune Avatar">
        </div>
        <ul class="hero__links">
            <li>
                <a href="https://github.com/lazarefortune" target="_blank">
                    {{ icon('github', '34') }}
                </a>
            </li>
            <li>
                <a href="https://linkedin.com/lazarefortune" target="_blank">
                    {{ icon('linkedin', '34') }}
                </a>
            </li>
        </ul>
    </div>

    <section class="home__push min-h-screen">
        <div class="mx-auto mt-20 mb-48 flex max-w-6xl flex-col-reverse px-4 sm:mt-24 sm:px-6 md:px-8 lg:mt-20 lg:grid lg:grid-cols-12 lg:flex-row lg:items-center lg:gap-8">
            <div class="mt-16 lg:col-span-6 lg:col-start-7 lg:row-span-2 lg:row-start-1 lg:mt-0">
                <h2 class="text-3xl font-extrabold tracking-tight text-primary-950 sm:text-4xl">
                    <span class="block">Pr√™t √† commencer ?</span>
                    <span class="block text-primary-600">Essayer gratuitement</span>
                    <span class="block">pendant 14 jours.</span>
                </h2>
                <p class="mt-3 text-lg text-muted">
                    Ac euismod vel sit maecenas id pellentesque eu sed consectetur. Malesuada adipiscing sagittis
                    vel
                    nulla nec.
                </p>
                <div class="mt-9">
                    <a href="#" class="btn-primary">
                        <span>Commencer</span>
                    </a>
                </div>
            </div>
            <div class="lg:col-span-5 lg:col-start-1 lg:row-span-2 lg:row-start-1">
                <div class="flex justify-center fade-out-image lg:justify-start">
                    <img src="{{ asset('images/illustrations/booking-illustration.svg') }}"
                         alt="illustration" class="w-full rounded-lg lg:rounded-xl">
                </div>
            </div>
        </div>
    </section>
{% endblock %}


{% block javascripts__footer %}
    <script type="text/javascript">

        document.addEventListener('DOMContentLoaded', function () {
            const hamburger = document.getElementById('hamburger');
            const line = document.getElementById('line');
            const line2 = document.getElementById('line2');
            const navMenu = document.querySelector('.nav__menu');
            if (!navMenu) return;
            const backdrop = document.querySelector('.backdrop-blur-2xl');

            let menuOpen = false;

            hamburger.addEventListener('click', function () {
                if (!menuOpen) {
                    line.style.transform = 'translateY(8px) rotate(45deg)';
                    line2.style.transform = 'translateY(-8px) rotate(-45deg)';
                    line2.style.opacity = '0';
                    menuOpen = true;
                } else {
                    line.style.transform = '';
                    line2.style.transform = '';
                    line2.style.opacity = '1';
                    menuOpen = false;
                }

                navMenu.classList.toggle('scale-100');
                navMenu.classList.toggle('opacity-100');
                navMenu.classList.toggle('visible');
                backdrop.classList.toggle('scale-y-100');
            });

            document.addEventListener('click', function (e) {
                if (!navMenu.contains(e.target) && !hamburger.contains(e.target) && menuOpen) {
                    line.style.transform = '';
                    line2.style.transform = '';
                    line2.style.opacity = '1';
                    menuOpen = false;

                    navMenu.classList.remove('scale-100', 'opacity-100', 'visible');
                    backdrop.classList.remove('scale-y-100');
                }
            });
        });

        // Cards spotlight
        class Spotlight {
            constructor(containerElement) {
                this.container = containerElement;
                this.cards = Array.from(this.container.children);
                this.mouse = {
                    x: 0,
                    y: 0,
                };
                this.containerSize = {
                    w: 0,
                    h: 0,
                };
                this.initContainer = this.initContainer.bind(this);
                this.onMouseMove = this.onMouseMove.bind(this);
                this.init();
            }

            initContainer() {
                this.containerSize.w = this.container.offsetWidth;
                this.containerSize.h = this.container.offsetHeight;
            }

            onMouseMove(event) {
                const {clientX, clientY} = event;
                const rect = this.container.getBoundingClientRect();
                const {w, h} = this.containerSize;
                const x = clientX - rect.left;
                const y = clientY - rect.top;
                const inside = x < w && x > 0 && y < h && y > 0;
                if (inside) {
                    this.mouse.x = x;
                    this.mouse.y = y;
                    this.cards.forEach((card) => {
                        const cardX = -(card.getBoundingClientRect().left - rect.left) + this.mouse.x;
                        const cardY = -(card.getBoundingClientRect().top - rect.top) + this.mouse.y;
                        card.style.setProperty('--mouse-x', `${cardX}px`);
                        card.style.setProperty('--mouse-y', `${cardY}px`);
                    });
                }
            }

            init() {
                this.initContainer();
                window.addEventListener('resize', this.initContainer);
                window.addEventListener('mousemove', this.onMouseMove);
            }
        }

        // Init Spotlight
        const spotlights = document.querySelectorAll('[data-spotlight]');
        spotlights.forEach((spotlight) => {
            new Spotlight(spotlight);
        });
    </script>
{% endblock %}
